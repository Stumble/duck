{"name":"base","children":[{"name":"nfd::fw::asf::ProbingModule","children":[{"name":"getFaceToProbe(const nfd::face::Face &, const ndn::Interest &, const fib::Entry &, const nfd::face::Face &)","size":47}]},{"name":"nfd::face::Face","children":[]},{"name":"nfd::fw::AccessStrategy","children":[{"name":"sendToLastNexthop(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &, nfd::fw::AccessStrategy::MtInfo &, const fib::Entry &)","size":40},{"name":"afterReceiveNewInterest(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &)","size":35},{"name":"afterReceiveInterest(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &)","size":20},{"name":"removeFaceInfo(const nfd::face::Face &)","size":5},{"name":"afterReceiveRetxInterest(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &)","size":8},{"name":"multicast(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &, const fib::Entry &, FaceId)","size":19},{"name":"beforeSatisfyInterest(const shared_ptr<pit::Entry> &, const nfd::face::Face &, const ndn::Data &)","size":27},{"name":"updateMeasurements(const nfd::face::Face &, const ndn::Data &, const RttEstimator::Duration &)","size":17}]},{"name":"nfd::pit::Pit","children":[{"name":"deleteInOutRecords(nfd::pit::Entry *, const nfd::face::Face &)","size":0}]},{"name":"nfd::face::TcpTransport","children":[]},{"name":"nfd::face::ProtocolFactory","children":[]},{"name":"nfd::fw::asf::AsfStrategy","children":[{"name":"onTimeout(const ndn::Name &, face::FaceId)","size":21},{"name":"sendNoRouteNack(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &)","size":10},{"name":"afterReceiveInterest(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &)","size":46},{"name":"forwardInterest(const ndn::Interest &, const fib::Entry &, const shared_ptr<pit::Entry> &, nfd::face::Face &, _Bool)","size":39},{"name":"beforeSatisfyInterest(const shared_ptr<pit::Entry> &, const nfd::face::Face &, const ndn::Data &)","size":22},{"name":"getBestFaceForForwarding(const fib::Entry &, const ndn::Interest &, const nfd::face::Face &)","size":58},{"name":"afterReceiveNack(const nfd::face::Face &, const lp::Nack &, const shared_ptr<pit::Entry> &)","size":7}]},{"name":"nfd::fw::asf::FaceInfo","children":[{"name":"recordRtt(const shared_ptr<pit::Entry> &, const nfd::face::Face &)","size":0},{"name":"get(nfd::face::FaceId)","size":5}]},{"name":"nfd::face::NfdAutoUnixStreamFactoryProtocolFactoryRegistrationClass","children":[]},{"name":"nfd::face::LpFragmenter","children":[{"name":"setOptions(const nfd::face::LpFragmenter::Options &)","size":5}]},{"name":"nfd::face::InternalClientTransport","children":[{"name":"connectToForwarder(nfd::face::InternalForwarderTransport *)","size":20}]},{"name":"nfd::face::LpReassembler::Options","children":[]},{"name":"nfd::face::GenericLinkServiceCounters","children":[]},{"name":"nfd::fw::AdmitLocalUnsolicitedDataPolicy","children":[{"name":"decide(const nfd::face::Face &, const ndn::Data &)","size":8}]},{"name":"nfd::face::LinkService","children":[{"name":"setFaceAndTransport(nfd::face::Face &, nfd::face::Transport &)","size":0}]},{"name":"nfd::fib::Fib","children":[{"name":"removeNextHop(nfd::fib::Entry &, const nfd::face::Face &)","size":0}]},{"name":"nfd::face::NfdAutoTcpFactoryProtocolFactoryRegistrationClass","children":[]},{"name":"nfd::fw::BestRouteStrategy2","children":[{"name":"afterReceiveInterest(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &)","size":63},{"name":"afterReceiveNack(const nfd::face::Face &, const lp::Nack &, const shared_ptr<pit::Entry> &)","size":48}]},{"name":"nfd::face::MulticastUdpTransport","children":[]},{"name":"nfd::face::UdpFactory::Error","children":[]},{"name":"nfd::fw::Strategy","children":[{"name":"sendInterest(const shared_ptr<pit::Entry> &, nfd::face::Face &, const ndn::Interest &)","size":0},{"name":"afterReceiveInterest(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &)","size":0},{"name":"beforeSatisfyInterest(const shared_ptr<pit::Entry> &, const nfd::face::Face &, const ndn::Data &)","size":7},{"name":"afterReceiveNack(const nfd::face::Face &, const lp::Nack &, const shared_ptr<pit::Entry> &)","size":7},{"name":"sendNack(const shared_ptr<pit::Entry> &, const nfd::face::Face &, const lp::NackHeader &)","size":0}]},{"name":"nfd::face::UdpFactory","children":[]},{"name":"nfd::fw::UnsolicitedDataPolicy","children":[{"name":"decide(const nfd::face::Face &, const ndn::Data &)","size":0}]},{"name":"nfd::face::FaceCounters","children":[]},{"name":"nfd::fw::asf::NamespaceInfo","children":[{"name":"expireFaceInfo(nfd::face::FaceId)","size":5},{"name":"getFaceInfo(const fib::Entry &, const nfd::face::Face &)","size":12},{"name":"insert(nfd::face::FaceId)","size":0},{"name":"get(nfd::face::FaceId)","size":0},{"name":"extendFaceInfoLifetime(nfd::fw::asf::FaceInfo &, const nfd::face::Face &)","size":12},{"name":"getOrCreateFaceInfo(const fib::Entry &, const nfd::face::Face &)","size":19},{"name":"find(nfd::face::FaceId)","size":0}]},{"name":"nfd::face::LpReassembler","children":[{"name":"setOptions(const nfd::face::LpReassembler::Options &)","size":5}]},{"name":"nfd::fw::MulticastStrategy","children":[{"name":"afterReceiveInterest(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &)","size":19}]},{"name":"nfd::NetworkInterfaceInfo","children":[]},{"name":"nfd::fw::AdmitNetworkUnsolicitedDataPolicy","children":[{"name":"decide(const nfd::face::Face &, const ndn::Data &)","size":8}]},{"name":"nfd::face::UnicastUdpTransport","children":[]},{"name":"nfd::face::FaceSystem","children":[]},{"name":"nfd::pit::Entry","children":[{"name":"getOutRecord(const nfd::face::Face &)","size":0},{"name":"insertOrUpdateOutRecord(nfd::face::Face &, const ndn::Interest &)","size":0},{"name":"deleteOutRecord(const nfd::face::Face &)","size":0},{"name":"deleteInRecord(const nfd::face::Face &)","size":0},{"name":"insertOrUpdateInRecord(nfd::face::Face &, const ndn::Interest &)","size":0},{"name":"getInRecord(const nfd::face::Face &)","size":0}]},{"name":"nfd::fw::RetxSuppressionExponential","children":[{"name":"decide(const nfd::face::Face &, const ndn::Interest &, pit::Entry &)","size":24}]},{"name":"nfd::face::ProtocolFactory::Error","children":[]},{"name":"nfd::NetworkInterfacePredicate","children":[{"name":"operator==(const nfd::NetworkInterfacePredicate &)","size":6},{"name":"operator!=(const nfd::NetworkInterfacePredicate &)","size":0},{"name":"operator()(const nfd::NetworkInterfaceInfo &)","size":6}]},{"name":"nfd::tools::nfdc::LegacyNfdc","children":[{"name":"faceCreate()","size":14},{"name":"faceDestroy()","size":17}]},{"name":"nfd::face::LinkServiceCounters","children":[]},{"name":"nfd::face::FaceSystem::ConfigContext","children":[]},{"name":"nfd::fw::asf::AsfMeasurements","children":[{"name":"getFaceInfo(const fib::Entry &, const ndn::Interest &, const nfd::face::Face &)","size":6},{"name":"getOrCreateFaceInfo(const fib::Entry &, const ndn::Interest &, const nfd::face::Face &)","size":6}]},{"name":"nfd::face::UnixStreamFactory","children":[]},{"name":"nfd::face::NfdAutoUdpFactoryProtocolFactoryRegistrationClass","children":[]},{"name":"nfd::FaceManager","children":[{"name":"notifyFaceEvent(const nfd::face::Face &, ndn::nfd::FaceEventKind)","size":9},{"name":"setLinkServiceOptions(nfd::face::Face &, const ndn::nfd::ControlParameters &, ndn::nfd::ControlParameters &)","size":18},{"name":"afterCreateFaceSuccess(const ndn::nfd::ControlParameters &, const shared_ptr<nfd::face::Face> &, const ndn::mgmt::CommandContinuation &)","size":42},{"name":"connectFaceStateChangeSignal(const nfd::face::Face &)","size":19},{"name":"matchFilter(const ndn::nfd::FaceQueryFilter &, const nfd::face::Face &)","size":41},{"name":"collectFaceStatus(const nfd::face::Face &, const time::steady_clock::TimePoint &)","size":25}]},{"name":"nfd::fw::DropAllUnsolicitedDataPolicy","children":[{"name":"decide(const nfd::face::Face &, const ndn::Data &)","size":5}]},{"name":"nfd::Forwarder","children":[{"name":"onOutgoingNack(const shared_ptr<pit::Entry> &, const nfd::face::Face &, const lp::NackHeader &)","size":45},{"name":"onContentStoreHit(const nfd::face::Face &, const shared_ptr<pit::Entry> &, const ndn::Interest &, const ndn::Data &)","size":15},{"name":"startProcessData(nfd::face::Face &, const ndn::Data &)","size":8},{"name":"onIncomingInterest(nfd::face::Face &, const ndn::Interest &)","size":52},{"name":"onOutgoingInterest(const shared_ptr<pit::Entry> &, nfd::face::Face &, const ndn::Interest &)","size":13},{"name":"insertDeadNonceList(pit::Entry &, _Bool, time::milliseconds, nfd::face::Face *)","size":35},{"name":"onIncomingNack(nfd::face::Face &, const lp::Nack &)","size":55},{"name":"onOutgoingData(const ndn::Data &, nfd::face::Face &)","size":25},{"name":"addFace(shared_ptr<nfd::face::Face>)","size":0},{"name":"onDataUnsolicited(nfd::face::Face &, const ndn::Data &)","size":14},{"name":"onIncomingData(nfd::face::Face &, const ndn::Data &)","size":69},{"name":"startProcessNack(nfd::face::Face &, const lp::Nack &)","size":18},{"name":"onInterestLoop(nfd::face::Face &, const ndn::Interest &)","size":21},{"name":"onContentStoreMiss(const nfd::face::Face &, const shared_ptr<pit::Entry> &, const ndn::Interest &)","size":30},{"name":"startProcessInterest(nfd::face::Face &, const ndn::Interest &)","size":18}]},{"name":"nfd::face::LpFragmenter::Options","children":[]},{"name":"nfd::face::GenericLinkService::Options","children":[]},{"name":"nfd::fw::BestRouteStrategyBase","children":[{"name":"afterReceiveInterest(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &)","size":23}]},{"name":"nfd::fib::Entry","children":[{"name":"addNextHop(nfd::face::Face &, uint64_t)","size":0},{"name":"removeNextHop(const nfd::face::Face &)","size":0},{"name":"hasNextHop(const nfd::face::Face &)","size":0},{"name":"findNextHop(const nfd::face::Face &)","size":0}]},{"name":"nfd::face::GenericLinkService","children":[{"name":"setOptions(const nfd::face::GenericLinkService::Options &)","size":0}]},{"name":"nfd::face::TcpFactory","children":[]},{"name":"nfd::FaceTable","children":[{"name":"add(shared_ptr<nfd::face::Face>)","size":0},{"name":"addImpl(shared_ptr<nfd::face::Face>, FaceId)","size":0},{"name":"addReserved(shared_ptr<nfd::face::Face>, FaceId)","size":0}]},{"name":"nfd::fw::NccStrategy::MeasurementsEntryInfo","children":[{"name":"updateBestFace(const nfd::face::Face &)","size":16}]},{"name":"nfd::fw::RetxSuppression","children":[{"name":"decide(const nfd::face::Face &, const ndn::Interest &, pit::Entry &)","size":0}]},{"name":"nfd::face::Transport","children":[{"name":"setState(enum nfd::face::TransportState)","size":0},{"name":"doSend(nfd::face::Transport::Packet &&)","size":0},{"name":"receive(nfd::face::Transport::Packet &&)","size":0},{"name":"setFaceAndLinkService(nfd::face::Face &, nfd::face::LinkService &)","size":0},{"name":"send(nfd::face::Transport::Packet &&)","size":0}]},{"name":"nfd::fw::NccStrategy","children":[{"name":"afterReceiveInterest(const nfd::face::Face &, const ndn::Interest &, const shared_ptr<pit::Entry> &)","size":73},{"name":"beforeSatisfyInterest(const shared_ptr<pit::Entry> &, const nfd::face::Face &, const ndn::Data &)","size":37}]},{"name":"nfd::fw::AdmitAllUnsolicitedDataPolicy","children":[{"name":"decide(const nfd::face::Face &, const ndn::Data &)","size":5}]},{"name":"nfd::face::TransportCounters","children":[]},{"name":"nfd::face::UnixStreamTransport","children":[]},{"name":"nfd::face::InternalTransportBase","children":[]},{"name":"nfd::face::InternalForwarderTransport","children":[{"name":"doSend(nfd::face::Transport::Packet &&)","size":7}]},{"name":"nfd::fw::RetxSuppressionFixed","children":[{"name":"decide(const nfd::face::Face &, const ndn::Interest &, pit::Entry &)","size":15}]},{"name":"nfd::face::Transport::Packet","children":[]}]}